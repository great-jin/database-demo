server:
  port: 9090

spring:
  shardingsphere:
    # 将运行模式配置为 Standalone 单机模式（Cluster：集群模式）
    mode:
      type: Standalone
      repository:
        type: JDBC

    datasource:
      names: ds0, ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://10.231.6.21:3306/test_db1?useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        password: budai#123456
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://10.231.6.21:3306/test_db2?useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        password: budai#123456

    # 执行时显示SQL语句
    props:
      # 日志显示具体的SQL
      sql-show: true

    # 配置分片规则
    rules:
      # 配置分片策略
      sharding:
        # 配置所有分片表
        tables:
          # 配置表名
          user_info:
            # 声明表所在的数据节点
            actual-data-nodes: ds$->{0..1}.user_info_1
            # 配置分库规则
            database-strategy:
              standard:
                # 配置分库的路由键
                sharding-column: id
                # 配置分片算法（需要配置一个名词，通过别名指向具体的策略）
                sharding-algorithm-name: db-inline

        # 定义分片算法
        sharding-algorithms:
          db-inline:
            # 使用自定义表达式
            type: inline
            props:
              algorithm-expression: ds$$->{id % 2}.user_info1

mybatis:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
